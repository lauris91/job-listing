{"version":3,"sources":["components/JobContainer.jsx","components/JobListContainer.jsx","App.js","index.js"],"names":["JobContainer","job","id","logo","company","position","postedAt","location","contract","newJob","new","featured","labels","onLabelClick","className","alt","src","homepage","map","label","index","onClick","JobListContainer","jobs","filteredValues","setFilteredValues","entries","useMemo","filter","role","level","tools","languages","x","value","every","includes","length","val","target","innerText","options","App","useState","placeholder","isClearable","isMulti","classNamePrefix","onChange","openMenuOnClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e17f17b5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { homepage } from \"../../package.json\";\r\n\r\nconst JobContainer = ({\r\n  job: {\r\n    id,\r\n    logo,\r\n    company,\r\n    position,\r\n    postedAt,\r\n    location,\r\n    contract,\r\n    new: newJob,\r\n    featured,\r\n  },\r\n  labels,\r\n  onLabelClick,\r\n}) => {\r\n  return (\r\n    //did not understand what is the criteria to display border-left\r\n    <div\r\n      className={`job-container ${id === 1 || id === 2 ? \"border-left\" : \"\"}`}\r\n    >\r\n      <div className=\"logo\">\r\n        <img alt=\"company-logo\" src={`${homepage}/images/${logo}`} />\r\n      </div>\r\n      <div className=\"job-description\">\r\n        <div className=\"job-description__company-row\">\r\n          {company}\r\n          {newJob && <div className=\"label label__new\">New!</div>}\r\n          {featured && <div className=\"label label__featured\">Featured</div>}\r\n        </div>\r\n        <div className=\"job-description__job-title\">{position}</div>\r\n        <div className=\"job-description__info-box\">\r\n          <div className=\"item\">{postedAt}</div>\r\n          <div className=\"item\">{contract}</div>\r\n          <div className=\"item\">{location}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"labels\">\r\n        {labels.map((label, index) => (\r\n          <div key={index} className=\"labels__item\" onClick={onLabelClick}>\r\n            {label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default JobContainer;\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport JobContainer from \"./JobContainer\";\r\n\r\nconst JobListContainer = ({ jobs, filteredValues, setFilteredValues }) => {\r\n  const entries = useMemo(\r\n    () =>\r\n      jobs.filter((job) => {\r\n        const labels = [job.role, job.level, ...job.tools, ...job.languages];\r\n        return filteredValues\r\n          .map((x) => x.value)\r\n          .every((x) => labels.includes(x));\r\n      }),\r\n    [filteredValues, jobs]\r\n  );\r\n\r\n  return (\r\n    <div className=\"job-list-container\">\r\n      {entries.length > 0 ? (\r\n        entries.map((job, index) => (\r\n          <JobContainer\r\n            key={index}\r\n            job={job}\r\n            labels={[job.role, job.level, ...job.tools, ...job.languages]}\r\n            onLabelClick={({ target: { innerText: val } }) => {\r\n              if (!filteredValues.map((x) => x.value).includes(val))\r\n                setFilteredValues([\r\n                  ...filteredValues,\r\n                  { value: val, label: val },\r\n                ]);\r\n            }}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"job-container job-container--empty\">No jobs found</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListContainer;\r\n","import React, { useState } from \"react\";\nimport ReactSelect from \"react-select\";\n\nimport JobListContainer from \"./components/JobListContainer\";\nimport jobs from \"./data.json\";\n\nconst options = [\n  { value: \"Frontend\", label: \"Frontend\" },\n  { value: \"Junior\", label: \"Junior\" },\n  { value: \"Senior\", label: \"Senior\" },\n  { value: \"React\", label: \"React\" },\n  { value: \"Sass\", label: \"Sass\" },\n  { value: \"CSS\", label: \"CSS\" },\n  { value: \"HTML\", label: \"HTML\" },\n  { value: \"JavaScript\", label: \"JavaScript\" },\n  { value: \"Fullstack\", label: \"Fullstack\" },\n  { value: \"Midweight\", label: \"Midweight\" },\n  { value: \"Django\", label: \"Django\" },\n  { value: \"Phyton\", label: \"Phyton\" },\n  { value: \"Vue\", label: \"Vue\" },\n  { value: \"Backend\", label: \"Backend\" },\n  { value: \"Ruby\", label: \"Ruby\" },\n  { value: \"RoR\", label: \"RoR\" },\n];\n\nfunction App() {\n  const [filteredValues, setFilteredValues] = useState([]);\n\n  return (\n    <div className=\"wrapper\">\n      <header></header>\n      <div className=\"content\">\n        {filteredValues.length > 0 && (\n          <div className=\"search-box\">\n            <ReactSelect\n              options={options}\n              className=\"custom-select\"\n              placeholder=\"Filter optionsâ€¦\"\n              isClearable\n              isMulti\n              classNamePrefix=\"custom-select\"\n              onChange={(val) => setFilteredValues(val)}\n              value={filteredValues}\n              openMenuOnClick={false}\n            />\n          </div>\n        )}\n        <JobListContainer\n          jobs={jobs}\n          filteredValues={filteredValues}\n          setFilteredValues={setFilteredValues}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/styles.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}